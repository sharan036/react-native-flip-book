var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.clamp=clamp;exports.transformOrigin=exports.snapPoint=exports.debugValue=exports.createPages=void 0;var _toConsumableArray2=_interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));var _reactNativeReanimated=require("react-native-reanimated");var createPages=exports.createPages=function createPages(_ref){var portrait=_ref.portrait,singleImageMode=_ref.singleImageMode,data=_ref.data;var allPages=[];if(portrait){if(!singleImageMode){data.forEach(function(page){allPages.push({left:page,right:page});allPages.push({left:page,right:page});});}else{for(var i=0;i<data.length;i++){allPages[i]={left:data[i],right:data[i]};}}}else{for(var _i=0;_i<data.length;_i++){if(singleImageMode){allPages.push({left:data[_i],right:data[_i+1]});_i++;}else{allPages.push({left:data[_i],right:data[_i]});}}}return allPages;};var transformOrigin=exports.transformOrigin=function transformOrigin(_ref2,transformations){'worklet';var x=_ref2.x,y=_ref2.y;var validTransformations=Array.isArray(transformations)?transformations.filter(function(transformation){return typeof transformation==='object';}):[];return[{translateX:x},{translateY:y}].concat((0,_toConsumableArray2.default)(validTransformations),[{translateX:-x},{translateY:-y}]);};var debug=function debug(msg,val){console.log(msg,val);};var debugValue=exports.debugValue=function debugValue(msg,val){'worklet';(0,_reactNativeReanimated.runOnJS)(debug)(msg,val);};var snapPoint=exports.snapPoint=function snapPoint(value,velocity,points){'worklet';var point=value+0.25*velocity;var deltas=points.map(function(p){return Math.abs(point-p);});var minDelta=Math.min.apply(Math,(0,_toConsumableArray2.default)(deltas));return points.find(function(p){return Math.abs(point-p)===minDelta;});};function clamp(number,min,max){'worklet';return Math.max(min,Math.min(number,max));}
//# sourceMappingURL=utils.js.map